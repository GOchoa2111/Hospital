// SistemaHospital/frontend/FrontEndHosp/src/main/java/views/ViewHistorialPaciente.java
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package views;

// Imports necesarios para los componentes y el layout
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import models.ModelPaciente; // Aseg�rate de que la clase ModelPaciente exista en el paquete models
import javax.swing.DefaultComboBoxModel; // Necesario para DefaultComboBoxModel

/**
 *
 * @author leonn
 */
public class ViewHistorialPaciente extends javax.swing.JInternalFrame {

    // --- Variables de componentes ---
    // Aseg�rate de que esta declaraci�n sea correcta
    private javax.swing.JComboBox<models.ModelPaciente> cmbPaciente; 
    private javax.swing.JButton btnExportarPDF;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHistorial;

    /**
     * Creates new form ViewHistorialPaciente
     */
    public ViewHistorialPaciente() {
        // Esta llamada es esencial para que el GUI Builder de NetBeans funcione
        initComponents();

        // Establecer las propiedades del frame
        setTitle("Reporte de Historial Cl�nico por Paciente");
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setSize(800, 600); // Puedes ajustar este tama�o seg�n sea necesario

        // --- INICIALIZACI�N MANUAL DEL MODELO DEL COMBOBOX ---
        // Esto es crucial para forzar el tipo gen�rico correcto
        // y evitar que el GUI builder lo sobrescriba o lo infiera incorrectamente.
        cmbPaciente.setModel(new DefaultComboBoxModel<models.ModelPaciente>());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbPaciente = new javax.swing.JComboBox(); // �NetBeans genera esto sin <ModelPaciente> a veces!
        btnGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistorial = new javax.swing.JTable();
        btnExportarPDF = new javax.swing.JButton();

        jLabel1.setText("Paciente:");

        // La siguiente l�nea es la que a veces causa conflicto con el generador de NetBeans.
        // Si NetBeans la vuelve a poner como JComboBox<String> o sin tipo,
        // la soluci�n en el constructor (arriba) la corregir�.
        // cmbPaciente.setModel(new javax.swing.DefaultComboBoxModel<models.ModelPaciente>()); // �Comenta o elimina si te da problemas con el dise�ador!


        btnGenerar.setText("Historial");

        tblHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblHistorial);

        btnExportarPDF.setText("Exportar Resultados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(cmbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnGenerar)
                        .addGap(84, 84, 84)
                        .addComponent(btnExportarPDF))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerar)
                    .addComponent(btnExportarPDF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // --- Getters para el Controlador ---
    public JComboBox<ModelPaciente> getCmbPaciente() { 
        return cmbPaciente; 
    }

    public JButton getBtnGenerar() { 
        return btnGenerar; 
    }

    public JButton getBtnExportarPDF() { 
        return btnExportarPDF; 
    }

    public JTable getTblHistorial() { 
        return tblHistorial; 
    }
}